using System;
using System.Data.SqlClient;
using System.Text;

namespace ReprocessaArqStone
{
    public static class ParoquiaApp
    {
        public static SqlDataReader GetAllCodExportacao()
        {
            var connectionGet = ConnectionApp.GetConnectionDB();
            connectionGet.Open();

            StringBuilder sb = new StringBuilder();

			sb.Append("BEGIN");
			sb.Append("  DECLARE @SQL NVARCHAR(MAX) ");
			sb.Append("  DECLARE @BANCO NVARCHAR(MAX) ");
			sb.Append("  DECLARE @ISTHEOSDBCENTRAL INTEGER ");

			sb.Append("  CREATE TABLE #PENDENCIAS ");
			sb.Append("  ( ");
			sb.Append("     BANCO VARCHAR(MAX), ");			 
			sb.Append("     CNPJ VARCHAR(MAX), IDPAROQUIA NUMERIC(18, 0), CODIGOPAROQUIA INT, PAROQUIA VARCHAR(MAX), CODEXPORTACAO NUMERIC(18, 0), ");
			sb.Append("     IDDIOCESE NUMERIC(18, 0), DIOCESE VARCHAR(MAX), ");
			sb.Append("     DOCUMENTO VARCHAR(MAX), ");
			sb.Append("     VALOR MONEY, DATAPREVISAOPAGAMENTO DATE, DATACAPTURA DATETIME, IDTRANSACAO NUMERIC(18, 0), USUARIO VARCHAR(MAX), ");
			sb.Append("     IDTRANSACAOSTATUS NUMERIC(18, 0), DATAULTIMAVERIFICACAO DATETIME, DATAHORA DATETIME, IDTRANSACAOSTATUSTIPO NUMERIC(18, 0), DESCRICAO VARCHAR(MAX), MENSAGEM VARCHAR(MAX), ");
			sb.Append("     ORIGEMDESCRICAO VARCHAR(MAX), TIPOPAGAMENTODESCRICAO VARCHAR(MAX), TIPOVENDADESCRICAO VARCHAR(MAX), SOLICITANTEDECRICAO VARCHAR(MAX) ");
			sb.Append("  ) ");

			sb.Append("  SET @SQL = ' DECLARE CR_CURSOR CURSOR FAST_FORWARD  '");
			sb.Append("  IF EXISTS(SELECT 1 FROM master.sys.databases where name = 'THEOSDBCENTRAL') ");
			sb.Append("  BEGIN ");
			sb.Append("    SET @SQL = @SQL + 'FOR SELECT DISTINCT BANCO FROM THEOSDBCENTRAL.DBO.Dioceses ORDER BY BANCO DESC' ");
			sb.Append("    SET @ISTHEOSDBCENTRAL = 1 ");
			sb.Append("  END ");
			sb.Append("  ELSE ");
			sb.Append("  BEGIN ");
			sb.Append("    SET @SQL = @SQL + 'FOR SELECT NAME FROM master.sys.databases where name = ''THEOSDB''' ");
			sb.Append("    SET @ISTHEOSDBCENTRAL = 0 ");
			sb.Append("  END ");

			sb.Append("  EXEC(@SQL) ");
			sb.Append("  OPEN CR_CURSOR ");
			sb.Append("  FETCH NEXT FROM CR_CURSOR ");
			sb.Append("  INTO @BANCO ");

			sb.Append("  WHILE @@FETCH_STATUS = 0 ");
			sb.Append("  BEGIN ");
			sb.Append("    IF NOT EXISTS(SELECT 1 FROM master.sys.databases where name = @BANCO) AND(@ISTHEOSDBCENTRAL = 1) ");
			sb.Append("    BEGIN ");
			sb.Append("      FETCH NEXT FROM CR_CURSOR ");
			sb.Append("      INTO @BANCO ");
			sb.Append("      CONTINUE ");
			sb.Append("    END ");
			sb.Append("    EXEC('USE ' + @BANCO + ' ");
			sb.Append("    INSERT INTO #PENDENCIAS ");
			sb.Append("    SELECT ");
			sb.Append("      '''+@BANCO+''' AS BANCO, ");
			sb.Append("      P.CNPJ, P.ID IDPAROQUIA, P.CODIGO CODIGOPAROQUIA, P.RAZAO_SOCIAL PAROQUIA, P.CODEXPORTACAO, ");
			sb.Append("      D.ID IDDIOCESE, D.RAZAO_SOCIAL DIOCESE, ");
			sb.Append("      CASE T.IDTIPOVENDA WHEN 1 THEN t.AUTHORIZATIONCODE WHEN 2 THEN t.AUTHORIZATIONCODE ELSE t.ACQUIRERTRANSACTIONID END AS DOCUMENTO, ");
			sb.Append("      T.VALOR, T.DATAPREVISAOPAGAMENTO, T.DATACAPTURA, T.IDTRANSACAO, TSPRI.USUARIO, ");
			sb.Append("      TSULT.IDTRANSACAOSTATUS, TSULT.DATAULTIMAVERIFICACAO, TSULT.DATAHORA, TSTULT.IDTRANSACAOSTATUSTIPO, TSTULT.DESCRICAO, TSDULT.MENSAGEM, ");
			sb.Append("      O.DESCRICAO ORIGEMDESCRICAO, TP.DESCRICAO TIPOPAGAMENTODESCRICAO, TV.DESCRICAO TIPOVENDADESCRICAO, TSO.DESCRICAO SOLICITANTEDECRICAO ");
			sb.Append("    FROM ");
			sb.Append("      PAROQUIA.TRANSACAO T WITH(NOLOCK) ");
			sb.Append("    INNER JOIN PAROQUIAS P WITH(NOLOCK) ON T.IDPAROQUIA = P.ID ");
			sb.Append("    INNER JOIN DIOCESES D WITH(NOLOCK) ON P.IDDIOCESE = D.ID ");
			sb.Append("    INNER JOIN PAROQUIA.ORIGEM O WITH(NOLOCK) ON O.IDORIGEM = T.IDORIGEM ");
			sb.Append("    LEFT JOIN PAROQUIA.TRANSACAOSOLICITANTE TSO WITH(NOLOCK) ON TSO.IDTRANSACAOSOLICITANTE = T.IDTRANSACAOSOLICITANTE ");
			sb.Append("    INNER JOIN PAROQUIA.TIPOVENDA TV WITH(NOLOCK) ON TV.IDTIPOVENDA = T.IDTIPOVENDA ");
			sb.Append("    INNER JOIN PAROQUIA.TIPOPAGAMENTO TP WITH(NOLOCK) ON TP.IDTIPOPAGAMENTO = T.IDTIPOPAGAMENTO ");
			sb.Append("    INNER JOIN PAROQUIA.TRANSACAOSTATUS TSPRI WITH(NOLOCK) ON T.IDTRANSACAO = TSPRI.IDTRANSACAO AND TSPRI.DATAHORA = (SELECT MIN(DATAHORA) FROM PAROQUIA.TRANSACAOSTATUS TS1  WITH(NOLOCK) WHERE TSPRI.IDTRANSACAO = TS1.IDTRANSACAO) ");
			sb.Append("    INNER JOIN PAROQUIA.TRANSACAOSTATUS TSULT WITH(NOLOCK) ON T.IDTRANSACAO = TSULT.IDTRANSACAO AND TSULT.DATAHORA = (SELECT MAX(DATAHORA) FROM PAROQUIA.TRANSACAOSTATUS TS1  WITH(NOLOCK) WHERE TSULT.IDTRANSACAO = TS1.IDTRANSACAO) ");
			sb.Append("    INNER JOIN PAROQUIA.TRANSACAOSTATUSTIPO TSTULT WITH(NOLOCK) ON TSULT.IDTRANSACAOSTATUSTIPO = TSTULT.IDTRANSACAOSTATUSTIPO ");
			sb.Append("    LEFT JOIN PAROQUIA.TRANSACAOSTATUSDETALHE TSDULT WITH(NOLOCK) ON TSDULT.IDTRANSACAOSTATUS = TSULT.IDTRANSACAOSTATUS ");
			sb.Append("    LEFT JOIN PAROQUIA.PENDENCIACONTABILIZACAO PC WITH(NOLOCK) ON PC.IDTRANSACAO = T.IDTRANSACAO ");
			sb.Append("    LEFT JOIN PAROQUIA.TRANSACAOBOLETO TB ON TB.IDTRANSACAO = T.IDTRANSACAO ");
			sb.Append("    WHERE ");
			sb.Append("      ((TSTULT.IDTRANSACAOSTATUSTIPO IN(4, 8, 17, 23, 26, 28) AND TSULT.DATAHORA < DATEADD(MINUTE, -30, GETDATE())) ");
			sb.Append("      OR(TSTULT.IDTRANSACAOSTATUSTIPO = 6 AND T.DATAPREVISAOPAGAMENTO < CAST(GETDATE() AS DATE)) ");
			sb.Append("      OR(TSTULT.IDTRANSACAOSTATUSTIPO = 12 AND T.DATACAPTURA < DATEADD(DAY, -2, CAST(GETDATE() AS DATE))) ");
			sb.Append("      OR TSTULT.IDTRANSACAOSTATUSTIPO IN(16,1,10,13,21)) ");
			sb.Append("      AND PC.IDPENDENCIACONTABILIZACAO IS NULL ");
			sb.Append("      AND CODEXPORTACAO NOT IN(39857, 26265, 26269) ");
			sb.Append("      AND(TB.IDTRANSACAOBOLETO IS NULL OR TB.VENCIMENTO < DATEADD(DAY, -6, CAST(GETDATE() AS DATE)))' ");
			sb.Append("    ) ");
			sb.Append("    FETCH NEXT FROM CR_CURSOR ");
			sb.Append("    INTO @BANCO ");
			sb.Append("  END ");

			sb.Append("  CLOSE CR_CURSOR ");
			sb.Append("  DEALLOCATE CR_CURSOR ");
			sb.Append("END ");

			sb.Append("SELECT DISTINCT ");
			sb.Append("  P.CODEXPORTACAO ");
			sb.Append("FROM ");
			sb.Append("  #PENDENCIAS P ");
			sb.Append("ORDER BY ");
			sb.Append("  CODEXPORTACAO ");

            String sql = sb.ToString();
            using SqlCommand commandBuscaCodExportacao = new SqlCommand(sql, connectionGet);
			commandBuscaCodExportacao.CommandTimeout = 300;
            return commandBuscaCodExportacao.ExecuteReader();
        }        
    }
}
